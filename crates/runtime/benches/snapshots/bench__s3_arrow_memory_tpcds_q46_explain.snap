---
source: crates/runtime/benches/bench.rs
description: "Query: select  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,amt,profit\n from\n   (select ss_ticket_number\n          ,ss_customer_sk\n          ,ca_city bought_city\n          ,sum(ss_coupon_amt) amt\n          ,sum(ss_net_profit) profit\n    from store_sales,date_dim,store,household_demographics,customer_address\n    where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n    and store_sales.ss_store_sk = store.s_store_sk\n    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n    and store_sales.ss_addr_sk = customer_address.ca_address_sk\n    and (household_demographics.hd_dep_count = 3 or\n         household_demographics.hd_vehicle_count= 1)\n    and date_dim.d_dow in (6,0)\n    and date_dim.d_year in (1999,1999+1,1999+2)\n    and store.s_city in ('Midway','Fairview','Fairview','Midway','Fairview')\n    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr\n    where ss_customer_sk = c_customer_sk\n      and customer.c_current_addr_sk = current_addr.ca_address_sk\n      and current_addr.ca_city <> bought_city\n  order by c_last_name\n          ,c_first_name\n          ,ca_city\n          ,bought_city\n          ,ss_ticket_number\n   LIMIT 100;\n"
snapshot_kind: text
---
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                                                                                                             |
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Sort: customer.c_last_name ASC NULLS LAST, customer.c_first_name ASC NULLS LAST, current_addr.ca_city ASC NULLS LAST, dn.bought_city ASC NULLS LAST, dn.ss_ticket_number ASC NULLS LAST, fetch=100                                                                                                               |
|               |   Projection: customer.c_last_name, customer.c_first_name, current_addr.ca_city, dn.bought_city, dn.ss_ticket_number, dn.amt, dn.profit                                                                                                                                                                          |
|               |     Inner Join: customer.c_current_addr_sk = current_addr.ca_address_sk Filter: dn.bought_city != current_addr.ca_city                                                                                                                                                                                           |
|               |       Projection: dn.ss_ticket_number, dn.bought_city, dn.amt, dn.profit, customer.c_current_addr_sk, customer.c_first_name, customer.c_last_name                                                                                                                                                                |
|               |         Inner Join: dn.ss_customer_sk = customer.c_customer_sk                                                                                                                                                                                                                                                   |
|               |           SubqueryAlias: dn                                                                                                                                                                                                                                                                                      |
|               |             Projection: store_sales.ss_ticket_number, store_sales.ss_customer_sk, customer_address.ca_city AS bought_city, sum(store_sales.ss_coupon_amt) AS amt, sum(store_sales.ss_net_profit) AS profit                                                                                                       |
|               |               Aggregate: groupBy=[[store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city]], aggr=[[sum(store_sales.ss_coupon_amt), sum(store_sales.ss_net_profit)]]                                                                                         |
|               |                 Projection: store_sales.ss_customer_sk, store_sales.ss_addr_sk, store_sales.ss_ticket_number, store_sales.ss_coupon_amt, store_sales.ss_net_profit, customer_address.ca_city                                                                                                                     |
|               |                   Inner Join: store_sales.ss_addr_sk = customer_address.ca_address_sk                                                                                                                                                                                                                            |
|               |                     Projection: store_sales.ss_customer_sk, store_sales.ss_addr_sk, store_sales.ss_ticket_number, store_sales.ss_coupon_amt, store_sales.ss_net_profit                                                                                                                                           |
|               |                       Inner Join: store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk                                                                                                                                                                                                                    |
|               |                         Projection: store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_addr_sk, store_sales.ss_ticket_number, store_sales.ss_coupon_amt, store_sales.ss_net_profit                                                                                                              |
|               |                           Inner Join: store_sales.ss_store_sk = store.s_store_sk                                                                                                                                                                                                                                 |
|               |                             Projection: store_sales.ss_customer_sk, store_sales.ss_hdemo_sk, store_sales.ss_addr_sk, store_sales.ss_store_sk, store_sales.ss_ticket_number, store_sales.ss_coupon_amt, store_sales.ss_net_profit                                                                                 |
|               |                               Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk                                                                                                                                                                                                                       |
|               |                                 BytesProcessedNode                                                                                                                                                                                                                                                               |
|               |                                   TableScan: store_sales projection=[ss_sold_date_sk, ss_customer_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_ticket_number, ss_coupon_amt, ss_net_profit]                                                                                                                      |
|               |                                 Projection: date_dim.d_date_sk                                                                                                                                                                                                                                                   |
|               |                                   BytesProcessedNode                                                                                                                                                                                                                                                             |
|               |                                     Filter: (date_dim.d_dow = Int32(6) OR date_dim.d_dow = Int32(0)) AND (date_dim.d_year = Int32(1999) OR date_dim.d_year = Int32(2000) OR date_dim.d_year = Int32(2001))                                                                                                       |
|               |                                       TableScan: date_dim projection=[d_date_sk, d_year, d_dow]                                                                                                                                                                                                                  |
|               |                             Projection: store.s_store_sk                                                                                                                                                                                                                                                         |
|               |                               BytesProcessedNode                                                                                                                                                                                                                                                                 |
|               |                                 Filter: store.s_city IN ([LargeUtf8("Midway"), LargeUtf8("Fairview"), LargeUtf8("Fairview"), LargeUtf8("Midway"), LargeUtf8("Fairview")])                                                                                                                                        |
|               |                                   TableScan: store projection=[s_store_sk, s_city]                                                                                                                                                                                                                               |
|               |                         Projection: household_demographics.hd_demo_sk                                                                                                                                                                                                                                            |
|               |                           BytesProcessedNode                                                                                                                                                                                                                                                                     |
|               |                             Filter: household_demographics.hd_dep_count = Int32(3) OR household_demographics.hd_vehicle_count = Int32(1)                                                                                                                                                                         |
|               |                               TableScan: household_demographics projection=[hd_demo_sk, hd_dep_count, hd_vehicle_count]                                                                                                                                                                                          |
|               |                     BytesProcessedNode                                                                                                                                                                                                                                                                           |
|               |                       TableScan: customer_address projection=[ca_address_sk, ca_city]                                                                                                                                                                                                                            |
|               |           BytesProcessedNode                                                                                                                                                                                                                                                                                     |
|               |             TableScan: customer projection=[c_customer_sk, c_current_addr_sk, c_first_name, c_last_name]                                                                                                                                                                                                         |
|               |       SubqueryAlias: current_addr                                                                                                                                                                                                                                                                                |
|               |         BytesProcessedNode                                                                                                                                                                                                                                                                                       |
|               |           TableScan: customer_address projection=[ca_address_sk, ca_city]                                                                                                                                                                                                                                        |
| physical_plan | SortPreservingMergeExec: [c_last_name@0 ASC NULLS LAST, c_first_name@1 ASC NULLS LAST, ca_city@2 ASC NULLS LAST, bought_city@3 ASC NULLS LAST, ss_ticket_number@4 ASC NULLS LAST], fetch=100                                                                                                                     |
|               |   SortExec: TopK(fetch=100), expr=[c_last_name@0 ASC NULLS LAST, c_first_name@1 ASC NULLS LAST, ca_city@2 ASC NULLS LAST, bought_city@3 ASC NULLS LAST, ss_ticket_number@4 ASC NULLS LAST], preserve_partitioning=[true]                                                                                         |
|               |     ProjectionExec: expr=[c_last_name@5 as c_last_name, c_first_name@4 as c_first_name, ca_city@6 as ca_city, bought_city@1 as bought_city, ss_ticket_number@0 as ss_ticket_number, amt@2 as amt, profit@3 as profit]                                                                                            |
|               |       CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                |
|               |         HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_current_addr_sk@4, ca_address_sk@0)], filter=bought_city@0 != ca_city@1, projection=[ss_ticket_number@0, bought_city@1, amt@2, profit@3, c_first_name@5, c_last_name@6, ca_city@8]                                                               |
|               |           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                            |
|               |             RepartitionExec: partitioning=Hash([c_current_addr_sk@4], 4), input_partitions=4                                                                                                                                                                                                                     |
|               |               CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                        |
|               |                 HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_customer_sk@1, c_customer_sk@0)], projection=[ss_ticket_number@0, bought_city@2, amt@3, profit@4, c_current_addr_sk@6, c_first_name@7, c_last_name@8]                                                                                   |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                    |
|               |                     RepartitionExec: partitioning=Hash([ss_customer_sk@1], 4), input_partitions=4                                                                                                                                                                                                                |
|               |                       ProjectionExec: expr=[ss_ticket_number@0 as ss_ticket_number, ss_customer_sk@1 as ss_customer_sk, ca_city@3 as bought_city, sum(store_sales.ss_coupon_amt)@4 as amt, sum(store_sales.ss_net_profit)@5 as profit]                                                                           |
|               |                         AggregateExec: mode=FinalPartitioned, gby=[ss_ticket_number@0 as ss_ticket_number, ss_customer_sk@1 as ss_customer_sk, ss_addr_sk@2 as ss_addr_sk, ca_city@3 as ca_city], aggr=[sum(store_sales.ss_coupon_amt), sum(store_sales.ss_net_profit)]                                          |
|               |                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                            |
|               |                             RepartitionExec: partitioning=Hash([ss_ticket_number@0, ss_customer_sk@1, ss_addr_sk@2, ca_city@3], 4), input_partitions=4                                                                                                                                                           |
|               |                               AggregateExec: mode=Partial, gby=[ss_ticket_number@2 as ss_ticket_number, ss_customer_sk@0 as ss_customer_sk, ss_addr_sk@1 as ss_addr_sk, ca_city@5 as ca_city], aggr=[sum(store_sales.ss_coupon_amt), sum(store_sales.ss_net_profit)]                                             |
|               |                                 CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                      |
|               |                                   HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_addr_sk@1, ca_address_sk@0)], projection=[ss_customer_sk@0, ss_addr_sk@1, ss_ticket_number@2, ss_coupon_amt@3, ss_net_profit@4, ca_city@6]                                                                            |
|               |                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                  |
|               |                                       RepartitionExec: partitioning=Hash([ss_addr_sk@1], 4), input_partitions=4                                                                                                                                                                                                  |
|               |                                         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                              |
|               |                                           HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_hdemo_sk@1, hd_demo_sk@0)], projection=[ss_customer_sk@0, ss_addr_sk@2, ss_ticket_number@3, ss_coupon_amt@4, ss_net_profit@5]                                                                                 |
|               |                                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                          |
|               |                                               RepartitionExec: partitioning=Hash([ss_hdemo_sk@1], 4), input_partitions=4                                                                                                                                                                                         |
|               |                                                 CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                      |
|               |                                                   HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_store_sk@3, s_store_sk@0)], projection=[ss_customer_sk@0, ss_hdemo_sk@1, ss_addr_sk@2, ss_ticket_number@4, ss_coupon_amt@5, ss_net_profit@6]                                                          |
|               |                                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                  |
|               |                                                       RepartitionExec: partitioning=Hash([ss_store_sk@3], 4), input_partitions=4                                                                                                                                                                                 |
|               |                                                         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                              |
|               |                                                           HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_sold_date_sk@0, d_date_sk@0)], projection=[ss_customer_sk@1, ss_hdemo_sk@2, ss_addr_sk@3, ss_store_sk@4, ss_ticket_number@5, ss_coupon_amt@6, ss_net_profit@7]                                |
|               |                                                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                          |
|               |                                                               RepartitionExec: partitioning=Hash([ss_sold_date_sk@0], 4), input_partitions=4                                                                                                                                                                     |
|               |                                                                 BytesProcessedExec                                                                                                                                                                                                                               |
|               |                                                                   SchemaCastScanExec                                                                                                                                                                                                                             |
|               |                                                                     RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                         |
|               |                                                                       MemoryExec: partitions=1, partition_sizes=[352]                                                                                                                                                                                            |
|               |                                                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                          |
|               |                                                               RepartitionExec: partitioning=Hash([d_date_sk@0], 4), input_partitions=4                                                                                                                                                                           |
|               |                                                                 ProjectionExec: expr=[d_date_sk@0 as d_date_sk]                                                                                                                                                                                                  |
|               |                                                                   BytesProcessedExec                                                                                                                                                                                                                             |
|               |                                                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                  |
|               |                                                                       FilterExec: (d_dow@2 = 6 OR d_dow@2 = 0) AND (d_year@1 = 1999 OR d_year@1 = 2000 OR d_year@1 = 2001)                                                                                                                                       |
|               |                                                                         SchemaCastScanExec                                                                                                                                                                                                                       |
|               |                                                                           RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                   |
|               |                                                                             MemoryExec: partitions=1, partition_sizes=[9]                                                                                                                                                                                        |
|               |                                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                  |
|               |                                                       RepartitionExec: partitioning=Hash([s_store_sk@0], 4), input_partitions=4                                                                                                                                                                                  |
|               |                                                         ProjectionExec: expr=[s_store_sk@0 as s_store_sk]                                                                                                                                                                                                        |
|               |                                                           BytesProcessedExec                                                                                                                                                                                                                                     |
|               |                                                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                          |
|               |                                                               FilterExec: Use s_city@1 IN (SET) ([Literal { value: LargeUtf8("Midway") }, Literal { value: LargeUtf8("Fairview") }, Literal { value: LargeUtf8("Fairview") }, Literal { value: LargeUtf8("Midway") }, Literal { value: LargeUtf8("Fairview") }]) |
|               |                                                                 RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                             |
|               |                                                                   SchemaCastScanExec                                                                                                                                                                                                                             |
|               |                                                                     MemoryExec: partitions=1, partition_sizes=[1]                                                                                                                                                                                                |
|               |                                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                          |
|               |                                               RepartitionExec: partitioning=Hash([hd_demo_sk@0], 4), input_partitions=4                                                                                                                                                                                          |
|               |                                                 ProjectionExec: expr=[hd_demo_sk@0 as hd_demo_sk]                                                                                                                                                                                                                |
|               |                                                   BytesProcessedExec                                                                                                                                                                                                                                             |
|               |                                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                  |
|               |                                                       FilterExec: hd_dep_count@1 = 3 OR hd_vehicle_count@2 = 1                                                                                                                                                                                                   |
|               |                                                         RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                     |
|               |                                                           SchemaCastScanExec                                                                                                                                                                                                                                     |
|               |                                                             MemoryExec: partitions=1, partition_sizes=[1]                                                                                                                                                                                                        |
|               |                                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                  |
|               |                                       RepartitionExec: partitioning=Hash([ca_address_sk@0], 4), input_partitions=4                                                                                                                                                                                               |
|               |                                         BytesProcessedExec                                                                                                                                                                                                                                                       |
|               |                                           SchemaCastScanExec                                                                                                                                                                                                                                                     |
|               |                                             RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                 |
|               |                                               MemoryExec: partitions=1, partition_sizes=[7]                                                                                                                                                                                                                      |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                    |
|               |                     RepartitionExec: partitioning=Hash([c_customer_sk@0], 4), input_partitions=4                                                                                                                                                                                                                 |
|               |                       BytesProcessedExec                                                                                                                                                                                                                                                                         |
|               |                         SchemaCastScanExec                                                                                                                                                                                                                                                                       |
|               |                           RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                   |
|               |                             MemoryExec: partitions=1, partition_sizes=[13]                                                                                                                                                                                                                                       |
|               |           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                            |
|               |             RepartitionExec: partitioning=Hash([ca_address_sk@0], 4), input_partitions=4                                                                                                                                                                                                                         |
|               |               BytesProcessedExec                                                                                                                                                                                                                                                                                 |
|               |                 SchemaCastScanExec                                                                                                                                                                                                                                                                               |
|               |                   RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                           |
|               |                     MemoryExec: partitions=1, partition_sizes=[7]                                                                                                                                                                                                                                                |
|               |                                                                                                                                                                                                                                                                                                                  |
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
