---
source: crates/runtime/benches/bench.rs
description: "Query: select  i_item_id,\n        avg(ss_quantity) agg1,\n        avg(ss_list_price) agg2,\n        avg(ss_coupon_amt) agg3,\n        avg(ss_sales_price) agg4\n from store_sales, customer_demographics, date_dim, item, promotion\n where ss_sold_date_sk = d_date_sk and\n       ss_item_sk = i_item_sk and\n       ss_cdemo_sk = cd_demo_sk and\n       ss_promo_sk = p_promo_sk and\n       cd_gender = 'M' and\n       cd_marital_status = 'M' and\n       cd_education_status = '4 yr Degree' and\n       (p_channel_email = 'N' or p_channel_event = 'N') and\n       d_year = 2001\n group by i_item_id\n order by i_item_id\n  LIMIT 100;\n"
snapshot_kind: text
---
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                                                        |
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Sort: item.i_item_id ASC NULLS LAST, fetch=100                                                                                                                                                                                                              |
|               |   Projection: item.i_item_id, avg(store_sales.ss_quantity) AS agg1, avg(store_sales.ss_list_price) AS agg2, avg(store_sales.ss_coupon_amt) AS agg3, avg(store_sales.ss_sales_price) AS agg4                                                                 |
|               |     Aggregate: groupBy=[[item.i_item_id]], aggr=[[avg(CAST(store_sales.ss_quantity AS Float64)), avg(store_sales.ss_list_price), avg(store_sales.ss_coupon_amt), avg(store_sales.ss_sales_price)]]                                                          |
|               |       Projection: store_sales.ss_quantity, store_sales.ss_list_price, store_sales.ss_sales_price, store_sales.ss_coupon_amt, item.i_item_id                                                                                                                 |
|               |         Inner Join: store_sales.ss_promo_sk = promotion.p_promo_sk                                                                                                                                                                                          |
|               |           Projection: store_sales.ss_promo_sk, store_sales.ss_quantity, store_sales.ss_list_price, store_sales.ss_sales_price, store_sales.ss_coupon_amt, item.i_item_id                                                                                    |
|               |             Inner Join: store_sales.ss_item_sk = item.i_item_sk                                                                                                                                                                                             |
|               |               Projection: store_sales.ss_item_sk, store_sales.ss_promo_sk, store_sales.ss_quantity, store_sales.ss_list_price, store_sales.ss_sales_price, store_sales.ss_coupon_amt                                                                        |
|               |                 Inner Join: store_sales.ss_sold_date_sk = date_dim.d_date_sk                                                                                                                                                                                |
|               |                   Projection: store_sales.ss_sold_date_sk, store_sales.ss_item_sk, store_sales.ss_promo_sk, store_sales.ss_quantity, store_sales.ss_list_price, store_sales.ss_sales_price, store_sales.ss_coupon_amt                                       |
|               |                     Inner Join: store_sales.ss_cdemo_sk = customer_demographics.cd_demo_sk                                                                                                                                                                  |
|               |                       BytesProcessedNode                                                                                                                                                                                                                    |
|               |                         TableScan: store_sales projection=[ss_sold_date_sk, ss_item_sk, ss_cdemo_sk, ss_promo_sk, ss_quantity, ss_list_price, ss_sales_price, ss_coupon_amt]                                                                                |
|               |                       Projection: customer_demographics.cd_demo_sk                                                                                                                                                                                          |
|               |                         BytesProcessedNode                                                                                                                                                                                                                  |
|               |                           Filter: customer_demographics.cd_gender = LargeUtf8("M") AND customer_demographics.cd_marital_status = LargeUtf8("M") AND customer_demographics.cd_education_status = LargeUtf8("4 yr Degree")                                    |
|               |                             TableScan: customer_demographics projection=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status]                                                                                                                     |
|               |                   Projection: date_dim.d_date_sk                                                                                                                                                                                                            |
|               |                     BytesProcessedNode                                                                                                                                                                                                                      |
|               |                       Filter: date_dim.d_year = Int32(2001)                                                                                                                                                                                                 |
|               |                         TableScan: date_dim projection=[d_date_sk, d_year]                                                                                                                                                                                  |
|               |               BytesProcessedNode                                                                                                                                                                                                                            |
|               |                 TableScan: item projection=[i_item_sk, i_item_id]                                                                                                                                                                                           |
|               |           Projection: promotion.p_promo_sk                                                                                                                                                                                                                  |
|               |             BytesProcessedNode                                                                                                                                                                                                                              |
|               |               Filter: promotion.p_channel_email = LargeUtf8("N") OR promotion.p_channel_event = LargeUtf8("N")                                                                                                                                              |
|               |                 TableScan: promotion projection=[p_promo_sk, p_channel_email, p_channel_event]                                                                                                                                                              |
| physical_plan | SortPreservingMergeExec: [i_item_id@0 ASC NULLS LAST], fetch=100                                                                                                                                                                                            |
|               |   SortExec: TopK(fetch=100), expr=[i_item_id@0 ASC NULLS LAST], preserve_partitioning=[true]                                                                                                                                                                |
|               |     ProjectionExec: expr=[i_item_id@0 as i_item_id, avg(store_sales.ss_quantity)@1 as agg1, avg(store_sales.ss_list_price)@2 as agg2, avg(store_sales.ss_coupon_amt)@3 as agg3, avg(store_sales.ss_sales_price)@4 as agg4]                                  |
|               |       AggregateExec: mode=FinalPartitioned, gby=[i_item_id@0 as i_item_id], aggr=[avg(store_sales.ss_quantity), avg(store_sales.ss_list_price), avg(store_sales.ss_coupon_amt), avg(store_sales.ss_sales_price)]                                            |
|               |         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                         |
|               |           RepartitionExec: partitioning=Hash([i_item_id@0], 4), input_partitions=4                                                                                                                                                                          |
|               |             AggregateExec: mode=Partial, gby=[i_item_id@4 as i_item_id], aggr=[avg(store_sales.ss_quantity), avg(store_sales.ss_list_price), avg(store_sales.ss_coupon_amt), avg(store_sales.ss_sales_price)]                                               |
|               |               CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                   |
|               |                 HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_promo_sk@0, p_promo_sk@0)], projection=[ss_quantity@1, ss_list_price@2, ss_sales_price@3, ss_coupon_amt@4, i_item_id@5]                                                            |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                               |
|               |                     RepartitionExec: partitioning=Hash([ss_promo_sk@0], 4), input_partitions=4                                                                                                                                                              |
|               |                       CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                           |
|               |                         HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_item_sk@0, i_item_sk@0)], projection=[ss_promo_sk@1, ss_quantity@2, ss_list_price@3, ss_sales_price@4, ss_coupon_amt@5, i_item_id@7]                                       |
|               |                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                       |
|               |                             RepartitionExec: partitioning=Hash([ss_item_sk@0], 4), input_partitions=4                                                                                                                                                       |
|               |                               CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                   |
|               |                                 HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_sold_date_sk@0, d_date_sk@0)], projection=[ss_item_sk@1, ss_promo_sk@2, ss_quantity@3, ss_list_price@4, ss_sales_price@5, ss_coupon_amt@6]                         |
|               |                                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                               |
|               |                                     RepartitionExec: partitioning=Hash([ss_sold_date_sk@0], 4), input_partitions=4                                                                                                                                          |
|               |                                       CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                           |
|               |                                         HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ss_cdemo_sk@2, cd_demo_sk@0)], projection=[ss_sold_date_sk@0, ss_item_sk@1, ss_promo_sk@3, ss_quantity@4, ss_list_price@5, ss_sales_price@6, ss_coupon_amt@7] |
|               |                                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                       |
|               |                                             RepartitionExec: partitioning=Hash([ss_cdemo_sk@2], 4), input_partitions=4                                                                                                                                      |
|               |                                               BytesProcessedExec                                                                                                                                                                                            |
|               |                                                 SchemaCastScanExec                                                                                                                                                                                          |
|               |                                                   RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                      |
|               |                                                     MemoryExec: partitions=1, partition_sizes=[352]                                                                                                                                                         |
|               |                                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                       |
|               |                                             RepartitionExec: partitioning=Hash([cd_demo_sk@0], 4), input_partitions=4                                                                                                                                       |
|               |                                               ProjectionExec: expr=[cd_demo_sk@0 as cd_demo_sk]                                                                                                                                                             |
|               |                                                 BytesProcessedExec                                                                                                                                                                                          |
|               |                                                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                               |
|               |                                                     FilterExec: cd_gender@1 = M AND cd_marital_status@2 = M AND cd_education_status@3 = 4 yr Degree                                                                                                         |
|               |                                                       SchemaCastScanExec                                                                                                                                                                                    |
|               |                                                         RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                |
|               |                                                           MemoryExec: partitions=1, partition_sizes=[235]                                                                                                                                                   |
|               |                                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                               |
|               |                                     RepartitionExec: partitioning=Hash([d_date_sk@0], 4), input_partitions=4                                                                                                                                                |
|               |                                       ProjectionExec: expr=[d_date_sk@0 as d_date_sk]                                                                                                                                                                       |
|               |                                         BytesProcessedExec                                                                                                                                                                                                  |
|               |                                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                       |
|               |                                             FilterExec: d_year@1 = 2001                                                                                                                                                                                     |
|               |                                               SchemaCastScanExec                                                                                                                                                                                            |
|               |                                                 RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                        |
|               |                                                   MemoryExec: partitions=1, partition_sizes=[9]                                                                                                                                                             |
|               |                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                       |
|               |                             RepartitionExec: partitioning=Hash([i_item_sk@0], 4), input_partitions=4                                                                                                                                                        |
|               |                               BytesProcessedExec                                                                                                                                                                                                            |
|               |                                 SchemaCastScanExec                                                                                                                                                                                                          |
|               |                                   RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                      |
|               |                                     MemoryExec: partitions=1, partition_sizes=[3]                                                                                                                                                                           |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                               |
|               |                     RepartitionExec: partitioning=Hash([p_promo_sk@0], 4), input_partitions=4                                                                                                                                                               |
|               |                       ProjectionExec: expr=[p_promo_sk@0 as p_promo_sk]                                                                                                                                                                                     |
|               |                         BytesProcessedExec                                                                                                                                                                                                                  |
|               |                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                       |
|               |                             FilterExec: p_channel_email@1 = N OR p_channel_event@2 = N                                                                                                                                                                      |
|               |                               RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                          |
|               |                                 SchemaCastScanExec                                                                                                                                                                                                          |
|               |                                   MemoryExec: partitions=1, partition_sizes=[1]                                                                                                                                                                             |
|               |                                                                                                                                                                                                                                                             |
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
