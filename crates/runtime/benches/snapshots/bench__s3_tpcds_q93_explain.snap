---
source: crates/runtime/benches/bench.rs
description: "Query: select  ss_customer_sk\n            ,sum(act_sales) sumsales\n      from (select ss_item_sk\n                  ,ss_ticket_number\n                  ,ss_customer_sk\n                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price\n                                                            else (ss_quantity*ss_sales_price) end act_sales\n            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk\n                                                               and sr_ticket_number = ss_ticket_number)\n                ,reason\n            where sr_reason_sk = r_reason_sk\n              and r_reason_desc = 'Did not get it on time') t\n      group by ss_customer_sk\n      order by sumsales, ss_customer_sk\n LIMIT 100;\n"
snapshot_kind: text
---
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Sort: sumsales ASC NULLS LAST, t.ss_customer_sk ASC NULLS LAST, fetch=100                                                                                                                                                                                                                                                                                                                                                                                  |
|               |   Projection: t.ss_customer_sk, sum(t.act_sales) AS sumsales                                                                                                                                                                                                                                                                                                                                                                                               |
|               |     Aggregate: groupBy=[[t.ss_customer_sk]], aggr=[[sum(t.act_sales)]]                                                                                                                                                                                                                                                                                                                                                                                     |
|               |       SubqueryAlias: t                                                                                                                                                                                                                                                                                                                                                                                                                                     |
|               |         Projection: store_sales.ss_customer_sk, CASE WHEN store_returns.sr_return_quantity IS NOT NULL THEN CAST(store_sales.ss_quantity - store_returns.sr_return_quantity AS Decimal128(10, 0)) * store_sales.ss_sales_price ELSE CAST(store_sales.ss_quantity AS Decimal128(10, 0)) * store_sales.ss_sales_price END AS act_sales                                                                                                                       |
|               |           Inner Join: store_returns.sr_reason_sk = reason.r_reason_sk                                                                                                                                                                                                                                                                                                                                                                                      |
|               |             Projection: store_sales.ss_customer_sk, store_sales.ss_quantity, store_sales.ss_sales_price, store_returns.sr_reason_sk, store_returns.sr_return_quantity                                                                                                                                                                                                                                                                                      |
|               |               Left Join: store_sales.ss_item_sk = store_returns.sr_item_sk, store_sales.ss_ticket_number = store_returns.sr_ticket_number                                                                                                                                                                                                                                                                                                                  |
|               |                 BytesProcessedNode                                                                                                                                                                                                                                                                                                                                                                                                                         |
|               |                   TableScan: store_sales projection=[ss_item_sk, ss_customer_sk, ss_ticket_number, ss_quantity, ss_sales_price]                                                                                                                                                                                                                                                                                                                            |
|               |                 BytesProcessedNode                                                                                                                                                                                                                                                                                                                                                                                                                         |
|               |                   TableScan: store_returns projection=[sr_item_sk, sr_reason_sk, sr_ticket_number, sr_return_quantity]                                                                                                                                                                                                                                                                                                                                     |
|               |             BytesProcessedNode                                                                                                                                                                                                                                                                                                                                                                                                                             |
|               |               TableScan: reason projection=[r_reason_sk], full_filters=[reason.r_reason_desc = LargeUtf8("Did not get it on time")]                                                                                                                                                                                                                                                                                                                        |
| physical_plan | SortPreservingMergeExec: [sumsales@1 ASC NULLS LAST, ss_customer_sk@0 ASC NULLS LAST], fetch=100                                                                                                                                                                                                                                                                                                                                                           |
|               |   SortExec: TopK(fetch=100), expr=[sumsales@1 ASC NULLS LAST, ss_customer_sk@0 ASC NULLS LAST], preserve_partitioning=[true]                                                                                                                                                                                                                                                                                                                               |
|               |     ProjectionExec: expr=[ss_customer_sk@0 as ss_customer_sk, sum(t.act_sales)@1 as sumsales]                                                                                                                                                                                                                                                                                                                                                              |
|               |       AggregateExec: mode=FinalPartitioned, gby=[ss_customer_sk@0 as ss_customer_sk], aggr=[sum(t.act_sales)]                                                                                                                                                                                                                                                                                                                                              |
|               |         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                                        |
|               |           RepartitionExec: partitioning=Hash([ss_customer_sk@0], 4), input_partitions=4                                                                                                                                                                                                                                                                                                                                                                    |
|               |             AggregateExec: mode=Partial, gby=[ss_customer_sk@0 as ss_customer_sk], aggr=[sum(t.act_sales)]                                                                                                                                                                                                                                                                                                                                                 |
|               |               ProjectionExec: expr=[ss_customer_sk@0 as ss_customer_sk, CASE WHEN sr_return_quantity@3 IS NOT NULL THEN CAST(ss_quantity@1 - sr_return_quantity@3 AS Decimal128(10, 0)) * ss_sales_price@2 ELSE CAST(ss_quantity@1 AS Decimal128(10, 0)) * ss_sales_price@2 END as act_sales]                                                                                                                                                              |
|               |                 CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                                |
|               |                   HashJoinExec: mode=Partitioned, join_type=Inner, on=[(sr_reason_sk@3, r_reason_sk@0)], projection=[ss_customer_sk@0, ss_quantity@1, ss_sales_price@2, sr_return_quantity@4]                                                                                                                                                                                                                                                              |
|               |                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                            |
|               |                       RepartitionExec: partitioning=Hash([sr_reason_sk@3], 4), input_partitions=4                                                                                                                                                                                                                                                                                                                                                          |
|               |                         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                        |
|               |                           HashJoinExec: mode=Partitioned, join_type=Left, on=[(ss_item_sk@0, sr_item_sk@0), (ss_ticket_number@2, sr_ticket_number@2)], projection=[ss_customer_sk@1, ss_quantity@3, ss_sales_price@4, sr_reason_sk@6, sr_return_quantity@8]                                                                                                                                                                                                |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                    |
|               |                               RepartitionExec: partitioning=Hash([ss_item_sk@0, ss_ticket_number@2], 4), input_partitions=4                                                                                                                                                                                                                                                                                                                                |
|               |                                 BytesProcessedExec                                                                                                                                                                                                                                                                                                                                                                                                         |
|               |                                   ParquetExec: file_groups={4 groups: [[tpcds_sf1/store_sales/store_sales.parquet:0..38551918], [tpcds_sf1/store_sales/store_sales.parquet:38551918..77103836], [tpcds_sf1/store_sales/store_sales.parquet:77103836..115655754], [tpcds_sf1/store_sales/store_sales.parquet:115655754..154207672]]}, projection=[ss_item_sk, ss_customer_sk, ss_ticket_number, ss_quantity, ss_sales_price]                                |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                    |
|               |                               RepartitionExec: partitioning=Hash([sr_item_sk@0, sr_ticket_number@2], 4), input_partitions=4                                                                                                                                                                                                                                                                                                                                |
|               |                                 BytesProcessedExec                                                                                                                                                                                                                                                                                                                                                                                                         |
|               |                                   ParquetExec: file_groups={4 groups: [[tpcds_sf1/store_returns/store_returns.parquet:0..4882309], [tpcds_sf1/store_returns/store_returns.parquet:4882309..9764618], [tpcds_sf1/store_returns/store_returns.parquet:9764618..14646927], [tpcds_sf1/store_returns/store_returns.parquet:14646927..19529233]]}, projection=[sr_item_sk, sr_reason_sk, sr_ticket_number, sr_return_quantity]                                  |
|               |                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                                                                                                            |
|               |                       RepartitionExec: partitioning=Hash([r_reason_sk@0], 4), input_partitions=4                                                                                                                                                                                                                                                                                                                                                           |
|               |                         RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                                                                                                                                                               |
|               |                           BytesProcessedExec                                                                                                                                                                                                                                                                                                                                                                                                               |
|               |                             ParquetExec: file_groups={1 group: [[tpcds_sf1/reason/reason.parquet]]}, projection=[r_reason_sk], predicate=r_reason_desc@2 = Did not get it on time, pruning_predicate=CASE WHEN r_reason_desc_null_count@2 = r_reason_desc_row_count@3 THEN false ELSE r_reason_desc_min@0 <= Did not get it on time AND Did not get it on time <= r_reason_desc_max@1 END, required_guarantees=[N] |
|               |                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
+---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
