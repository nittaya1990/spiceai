[package]
edition.workspace = true
exclude.workspace = true
homepage.workspace = true
license.workspace = true
name = "data_components"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
arrow.workspace = true
arrow-buffer.workspace = true
arrow-flight.workspace = true
async-stream.workspace = true
async-trait.workspace = true
aws-config = { version = "1.5.13", optional = true }
aws-sdk-dynamodb = { version = "1.59.0", optional = true }
base64.workspace = true
bb8 = { workspace = true, optional = true }
bytes.workspace = true
charset = { workspace = true, optional = true }
chrono.workspace = true
clickhouse-rs = { workspace = true, optional = true }
datafusion.workspace = true
datafusion-federation = { workspace = true }
datafusion-federation-sql = { workspace = true }
datafusion-table-providers = { workspace = true }
db_connection_pool = { path = "../db_connection_pool" }
delta_kernel = { git="https://github.com/spiceai/delta-kernel-rs.git", rev = "69e11a29a6dc67ec1d969e3a652f00924b995b3a", features = [
    "default-engine",
    "cloud",
], optional = true }
document_parse = { path = "../document_parse" }
duckdb = { workspace = true, features = [
    "bundled",
    "r2d2",
    "vtab",
    "vtab-arrow",
    "appender-arrow",
], optional = true }
flight_client = { path = "../flight_client" }
futures.workspace = true
globset.workspace = true
graph-rs-sdk = { workspace = true, optional = true }
graphql-parser.workspace = true
http = { version = "1.1.0" }
iceberg-catalog-rest.workspace = true
iceberg.workspace = true
iceberg-datafusion.workspace = true
imap = { workspace = true, optional = true }
indexmap.workspace = true
itertools.workspace = true
mailparse = { workspace = true, optional = true }
object_store = { workspace = true }
rdkafka = { version = "0.37.0", features = ["ssl-vendored"], optional = true }
regex = "1.10.4"
reqwest.workspace = true
rusqlite = { workspace = true, optional = true }
secrecy.workspace = true
serde.workspace = true
serde_json.workspace = true
snafu.workspace = true
snowflake-api = { workspace = true, optional = true }
spark-connect-rs = { git = "https://github.com/spiceai/spark-connect-rs.git", rev = "81b159ccd10f806fcb2d30f86715f77350ba24a2", features = [
    "tls",
], optional = true }
tiberius = { workspace = true, optional = true }
tokio.workspace = true
tokio-postgres = { workspace = true, features = [
    "with-chrono-0_4",
], optional = true }
tokio-util = { workspace = true, optional = true }
tonic = { workspace = true }
tracing.workspace = true
url = "2.5.4"
uuid.workspace = true

[target.'cfg(windows)'.dependencies]
rdkafka = { version = "0.37.0", features = ["cmake-build"], optional = true }

[features]
clickhouse = ["dep:clickhouse-rs"]
databricks = ["delta_lake", "spark_connect"]
debezium = ["dep:rdkafka"]
delta_lake = ["dep:delta_kernel"]
duckdb = [
    "dep:duckdb",
    "db_connection_pool/duckdb",
    "datafusion-table-providers/duckdb",
    "datafusion-table-providers/duckdb-federation",
]
dynamodb = ["dep:aws-sdk-dynamodb", "dep:aws-config"]
flightsql = []
imap = ["dep:charset", "dep:imap", "dep:mailparse"]
mssql = ["dep:tiberius", "dep:tokio-util", "dep:bb8"]
mysql = ["datafusion-table-providers/mysql"]
odbc = []
postgres = [
    "dep:tokio-postgres",
    "datafusion-table-providers/postgres",
    "datafusion-table-providers/postgres-federation",
]
sharepoint = ["dep:graph-rs-sdk"]
snowflake = ["dep:snowflake-api"]
spark_connect = ["dep:spark-connect-rs"]
sqlite = [
    "dep:rusqlite",
    "datafusion-table-providers/sqlite",
    "datafusion-table-providers/sqlite-federation",
]

[dev-dependencies]
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
